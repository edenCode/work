
1.对称加密算法 通过一个公共的密钥，双方进行加密，解密操作。

对称加密算法是应用较早的加密算法，技术成熟。在对称加密算法中，数据发信方将明文（原始数据）和加密密钥（mi yao）一起经过特殊加密算法处理后，
使其变成复杂的加密密文发送出去。收信方收到密文后，若想解读原文，则需要使用加密用过的密钥及相同算法的逆算法对密文进行解密，
才能使其恢复成可读明文。在对称加密算法中，使用的密钥只有一个，发收信双方都使用这个密钥对数据进行加密和解密，这就要求解密方事先必须知道加密密钥。

2. hash 算法   对于一些数据 计算得到一个固定位数的值。（对于数据量大的计算时间大，内存消耗也比较大）

Hash，一般翻译做“散列”，也有直接音译为“哈希”的，就是把任意长度的输入（又叫做预映射pre-image）通过散列算法变换成固定长度的输出，该输出就是散列值。这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间
，不同的输入可能会散列成相同的输出，所以不可能从散列值来确定唯一的输入值。简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数

3. 非对称加密算法：
非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）。公开密钥与私有密钥是一对，如果用公开密钥对数据进行加密，只有用对应的私有密钥才能解密；如果用私有密钥对数据进行加密，那么只有用对应的公开密钥才能解密。
因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法。 非对称加密算法实现机密信息交换的基本过程是：甲方生成一对密钥并将其中的一把作为公用密钥向其它方公开；得到该公用密钥的乙方使用该密钥对机密信息进行加密后再发送给甲方；甲方再用自己保存的另一把专用密钥对加密后的信息进行解密。
另一方面，甲方可以使用乙方的公钥对机密信息进行签名后再发送给乙方；甲方再用自己的私匙对乙方发送回来的数据进行验签。
甲方只能用其专用密钥解密由其公用密钥加密后的任何信息。 非对称加密算法的保密性比较好，它消除了最终用户交换密钥的需要。
非对称密码体制的特点：算法强度复杂、安全性依赖于算法与密钥但是由于其算法复杂，而使得加密解密速度没有对称加密解密的速度快。对称密码体制中只有一种密钥，并且是非公开的，
如果要解密就得让对方知道密钥。所以保证其安全性就是保证密钥的安全，而非对称密钥体制有两种密钥，其中一个是公开的，这样就可以不需要像对称密码那样传输对方的密钥了。这样安全性就大了很多

4. 数字签名

数字签名（又称公钥数字签名、电子签章）是一种类似写在纸上的普通的物理签名，但是使用了公钥加密领域的技术实现，用于鉴别数字信息的方法。一套数字签名通常定义两种互补的运算，一个用于签名，另一个用于验证。
数字签名，就是只有信息的发送者才能产生的别人无法伪造的一段数字串，这段数字串同时也是对信息的发送者发送信息真实性的一个有效证明。
数字签名是非对称密钥加密技术与数字摘要技术的应用。

5. 密码协商

密钥协商：两个或多个实体协商，共同建立会话密钥，任何一个参与者均对结果产生影响，不需要任何可信的第三方（TTP）。
密钥协商协议：会话密钥由每个协议参与者分别产生的参数通过一定的计算得出。常见的密钥协商协议，如IKE。
密钥协商协议的生成方式：可分为证书型和无证书型。证书型是指在会话密钥的产生过程中，由一个可信的证书中心（CA）给参与密钥协商的各方各分发一个证书，此证书中含有此方的公钥，ID及其他信息。证书型密钥协商协议的优点是提供认证，目前PKI（公钥密码体制）广泛部署，比较成熟，
应用面广，且由PKG管理公私钥对有利于统一管理，缺点是计算代价大，需要一个可信的CA，同时证书还需要维护。无证书型是指各方在进行会话密钥的协商过程中不需要证书的参与，这是目前密钥协商协议的主流种类，
优点是不需要CA的参与，减少了计算量，尤其是在低耗环境下应用的更多，同时安全性也不比证书型弱。几乎没有明显的缺点，只是设计一个安全的更加低耗的无证书密钥协商方案不是很容易。


//算法选择参考
1、请产品SE（安全）先自检，确定产品没有公司指定的不安全的加密算法，输出评估报告，然后测试人员对评估结果进行分析确认；建议：评估报告以敏感数据表格的形式例行维护，确保每个版本有一个敏感数据检查表，包含密码、密钥、关键个人数据、敏感数据。样例表可参考：http://wss.huawei.com/sites/ipd-coresafe-trm/DocLib6/Forms/AllItems.aspx?RootFolder=%2fsites%2fipd%2dcoresafe%2dtrm%2fDocLib6%2f4%2e%e8%9e%8d%e5%90%88%e9%80%9a%e4%bf%a1%e5%ae%89%e5%85%a8TSEG%2f5%2e%e6%b5%8b%e8%af%95%e5%9f%ba%e7%ba%bf%e7%bb%b4%e6%8a%a4&FolderCTID=0x012000BD3708B00DA4DD4095AE88FBD6956716 2、使用IDA反编译产品二进制文件，在函数列表（function name窗口）和二进制文本（Hex view）中查找算法关键字(MD5，AES等)，排查代码中是否存在不安全加密算法的使用场景；
 3、使用Search and Replace或者Souce Insight或者PowerGREP工具在产品源代码中搜索不安全加密算法关键字（Blowfish|RC4|DES|DESX|RC|Skipjack|2TDEA|TEA|MD5|SHA|DSA|DH|ECDH等，每个版本测试时需要定制此正则表达式，参考下面的不安全算法定制。），排查代码中是否存在不安全加密算法的使用场景； 4、检查存在加解密的设计文档，查看加解密相关的设计内容是否符合以下要求： 1）不使用公司认定的不安全密码算法； 2）使用公司推荐使用的加密算法； 3）缺省使用安全的加密算法，如客户选择不安全的加密算法，应提示安全风险； 4）应使用没有专利的、安全的、公开的标准加密算法； 5、输出排查内容和结果到测试报告。
说明：
公司认定的不安全密码算法包括： 
	1）分组密码算法：Blowfish, DES, DESX, RC2,RC4,Skipjack, 2TDEA, TEA 
	2）流密码算法：SEAL, CYLINK_MEK, RC4 (<128 bits) 
	3）哈希算法：SHA0, MD2, MD4, MD5, RIPEMD, RIPEMD-128；SHA-1禁止用于数字签名的场景 
	4）数字签名算法：RSA (<1024 bits)、DSA (<1024 bits)、 ECDSA(≤160bits) 5）密钥交换算法：DH (< 1024 bits)、ECDH(≤223bits)
公司推荐使用的密码算法包括： 
	1）分组密码算法：AES128 
	2）流密码算法： AES128（OFB或CTR模式） 
	3）哈希算法：SHA256 
	4）数字签名算法：RSA(2048)、DSA(2048) 、ECDSA(256) 
	5）密钥交换算法：DH(2048

RSA 加密算法原理：
https://www.cnblogs.com/gwind/p/8013116.html


密码加密：
	1. 先采用hash算法生成key，在用 AES 128 加密.
	2. 或者采用证书认证加密方式RSA加密

